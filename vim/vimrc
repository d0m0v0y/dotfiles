" install plugins

call plug#begin('~/.vim/plugged')

Plug 'Valloric/YouCompleteMe'
Plug 'SirVer/ultisnips'
" Statuslines
Plug 'itchyny/lightline.vim'
" Plug 'vim-airline/vim-airline'
" Plug 'vim-airline/vim-airline-themes'

" Commenting support (gc)
Plug 'tpope/vim-commentary'

" NERDTree
Plug 'scrooloose/nerdtree'

" Fugitive
Plug 'tpope/vim-fugitive'
" " Git log viewer (Gitv! for file mode)
Plug 'gregsexton/gitv', { 'on': 'Gitv' }
" " Git changes showed on line numbers
Plug 'airblade/vim-gitgutter'
" " REST Console
" Plug 'diepm/vim-rest-console', { 'for': 'rest' }

" vimproc
Plug 'Shougo/vimproc.vim', { 'do': 'make' }
" Unite
Plug 'Shougo/unite.vim'

" Surround (cs"')
Plug 'tpope/vim-surround'

" Buffers in tabs
Plug 'ap/vim-buftabline'

" Highlight jump characters on f, F, t, T¬
Plug 'unblevable/quick-scope'

" Colorschemes
" Solarized
Plug 'altercation/vim-colors-solarized'
" Gruvbox¬
Plug 'morhetz/gruvbox'

" Add plugins to &runtimepath
call plug#end()


let mapleader = " "
set backspace=2  " Backspace deletes like most programs in insert mode
set ruler         " show the cursor position all the time

" Softtabs, 2 spaces
set tabstop=2
set shiftwidth=2
set shiftround
set expandtab

" Numbers
set number
set numberwidth=5

"Colorscheme
syntax enable
set background=dark
" colorscheme solarized
colorscheme gruvbox

" NERDTree settings
map <leader>` :NERDTreeToggle<CR>

" YouCompleteMe settings
imap <Tab> <C-P>

" Quick-scope settings
" Trigger a highlight in the appropriate direction when pressing these keys:
let g:qs_highlight_on_keys = ['f', 'F', 't', 'T']

" Unite settings and mappings
let g:unite_source_rec_async_command = ['ag', '--follow', '--nocolor', '--nogroup', '--hidden', '-g', '']
" Use ag for search
if executable('ag')
  let g:unite_source_grep_command = 'ag'
  let g:unite_source_grep_default_opts = '--nogroup --nocolor --column'
  let g:unite_source_grep_recursive_opt = ''
endif
let g:unite_source_history_yank_enable = 1
call unite#filters#matcher_default#use(['matcher_fuzzy'])

nnoremap <leader>o :<C-U>Unite -no-split -buffer-name=files -start-insert file_rec/async:!<CR>
nnoremap <leader>O :<C-U>Unite -no-split -buffer-name=files -start-insert file_rec<CR>
nnoremap <leader>b :<C-U>Unite -quick-match -no-split -buffer-name=buffer buffer<CR>
nnoremap <leader>y :<C-u>Unite -no-split -buffer-name=yank history/yank<cr>
nnoremap <leader>r :<C-u>Unite -no-split -buffer-name=mru -start-insert file_mru<cr>

" Airline configuration
" Enable 'tabs'
let g:airline#extensions#tabline#enabled = 1
set laststatus=2
